<?xml version="1.0" encoding="UTF-8" ?>
<project name="jcel-build" default="dist" basedir=".">

	<!--
 *
 * Copyright 2009-2013 Julian Mendez
 *
 *
 * This file is part of jcel.
 *
 *
 * The contents of this file are subject to the GNU Lesser General Public License
 * version 3
 *
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Alternatively, the contents of this file may be used under the terms
 * of the Apache License, Version 2.0, in which case the
 * provisions of the Apache License, Version 2.0 are applicable instead of those
 * above.
 *
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<property name="project.groupId" value="jcel" />
	<property name="project.artifactId" value="build" />

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_root.directory" value=".." />
	<property name="_lib.directory" value="${project.build.directory}/lib" />
	<property name="_targetlib.directory" value="target" />
	<property name="groupId.directory" value="jcel" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_jars.directory" value="${basedir}/.." />
	<property name="_resources.directory" value="${src.directory}/main/resources" />
	<property name="_release.directory" value="${project.build.directory}/release/${project.groupId}-${project.version}" />
	<property name="_manifest.directory" value="${src.directory}/main/manifest/MANIFEST.MF" />
	<property name="_javadoc.directory" value="${project.build.directory}/site/javadoc" />
	<property name="_src.javadoc.directory" value="${src.directory}/main/javadoc" />

	<property name="module.0.name" value="jcel-coreontology" />
	<property name="module.1.name" value="jcel-core" />
	<property name="module.2.name" value="jcel-ontology" />
	<property name="module.3.name" value="jcel-reasoner" />
	<property name="module.4.name" value="jcel-owlapi" />
	<property name="module.5.name" value="jcel-protege" />
	<property name="lastmodule.name" value="${module.5.name}" />
	<property name="build.0.name" value="library" />
	<property name="build.0.filename" value="jcel-${project.version}" />
	<property name="build.1.name" value="plugin" />
	<property name="build.1.filename" value="de.tudresden.inf.lat.jcel" />
	<property name="build.2.name" value="standalone" />
	<property name="build.2.filename" value="jcel" />


	<!-- Calls subprojects. -->
	<target name="callsubprojects">
		<subant antfile="${_root.directory}/${module.0.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${_root.directory}/${module.1.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${_root.directory}/${module.2.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${_root.directory}/${module.3.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${_root.directory}/${module.4.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${_root.directory}/${module.5.name}/build.xml" buildpath="." target="${target}" />
	</target>

	<!-- Calls other build files. -->
	<target name="callbuilds">
		<subant antfile="${build.0.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${build.1.name}/build.xml" buildpath="." target="${target}" />
		<subant antfile="${build.2.name}/build.xml" buildpath="." target="${target}" />
	</target>

	<!-- Cleans compiled files. -->
	<target name="clean">
		<antcall target="callsubprojects">
			<param name="target" value="clean" />
		</antcall>
		<antcall target="callbuilds">
			<param name="target" value="clean" />
		</antcall>
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Compiles all modules and gets their jars. -->
	<target name="compilemodules">
		<antcall target="callsubprojects">
			<param name="target" value="dist" />
		</antcall>
	</target>

	<!-- Prepares the jars for the release. -->
	<target name="preparejars">
		<copy todir="${_release.directory}/lib">
			<fileset dir="${_root.directory}/${module.name}/target" includes="${module.name}-${project.version}.jar" />
		</copy>
		<copy todir="${_release.directory}/src">
			<fileset dir="${_root.directory}/${module.name}/target" includes="${module.name}-${project.version}-sources.jar" />
		</copy>
	</target>

	<!-- Executes the build modules. -->
	<target name="bundle">
		<antcall target="callbuilds">
			<param name="target" value="dist" />
		</antcall>
	</target>

	<!-- Creates the release. -->
	<target name="release">
		<mkdir dir="${_release.directory}/doc" />

		<antcall target="preparejars">
			<param name="module.name" value="${module.0.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.1.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.2.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.3.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.4.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.5.name}" />
		</antcall>

		<copy todir="${_release.directory}/${build.0.name}">
			<fileset dir="${build.0.name}/target" includes="${build.0.filename}.jar" />
		</copy>

		<copy todir="${_release.directory}/${build.1.name}">
			<fileset dir="${build.1.name}/target" includes="${build.1.filename}.jar" />
		</copy>

		<copy todir="${_release.directory}/${build.2.name}">
			<fileset dir="${build.2.name}/target" includes="${build.2.filename}.jar" />
		</copy>

		<zip destfile="${_release.directory}/doc/${project.groupId}-${project.version}-javadoc.zip">
			<fileset dir="${_root.directory}/${lastmodule.name}/target/site" includes="apidocs/**" />
		</zip>

		<zip destfile="${project.build.directory}/${project.groupId}-${project.version}.zip">
			<fileset dir="${_release.directory}/.." includes="${project.groupId}-${project.version}/**" />
		</zip>
	</target>

	<target name="dist" depends="clean, compilemodules, bundle, release" />

</project>

