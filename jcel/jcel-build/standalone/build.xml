<?xml version="1.0" encoding="UTF-8" ?>
<project name="jcel-build-standalone" default="dist" basedir=".">

	<!--
 *
 * Copyright 2009-2013 Julian Mendez
 *
 *
 * This file is part of jcel.
 *
 *
 * The contents of this file are subject to the GNU Lesser General Public License
 * version 3
 *
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Alternatively, the contents of this file may be used under the terms
 * of the Apache License, Version 2.0, in which case the
 * provisions of the Apache License, Version 2.0 are applicable instead of those
 * above.
 *
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
-->

	<!-- For more information about this file, see http://ant.apache.org -->

	<!-- Imports 'project.groupId', 'project.artifactId', and 'project.version' properties. -->
	<xmlproperty file="pom.xml" />

	<!-- Imports 'mainclass', 'bundlejars', and	'bundlelicenses' properties. -->
	<property file="build.properties" />

	<!-- Project-specific properties. -->
	<fail unless="project.groupId">Error: 'project.groupId' is undefined. This property should have the group identifier.</fail>
	<fail unless="project.artifactId">Error: 'project.artifactId' is undefined. This property should have the artifact identifier.</fail>
	<fail unless="project.version">Error: 'project.version' is undefined. This property should have the version number in the form major.minor.patch.</fail>
	<fail unless="mainclass">Error: 'mainclass' is undefined.</fail>
	<fail unless="bundlejars">Error: 'bundlejars' is undefined.</fail>
	<fail unless="bundlelicenses">Error: 'bundlelicenses' is undefined.</fail>

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_root.directory" value="../.." />
	<property name="_lib.directory" value="${project.build.directory}/lib" />
	<property name="_targetlib.directory" value="target" />
	<property name="_targetclasses.directory" value="${_targetlib.directory}/classes" />
	<property name="groupId.directory" value="jcel" />
	<property name="repository.directory" value="../jars/lib" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_jars.directory" value="${basedir}/.." />
	<property name="_bundle.directory" value="${project.build.directory}" />
	<property name="_bundlejars.directory" value="${project.build.directory}" />
	<property name="_bundle.name" value="jcel" />

	<property name="module.0.name" value="jcel-coreontology" />
	<property name="module.1.name" value="jcel-core" />
	<property name="module.2.name" value="jcel-ontology" />
	<property name="module.3.name" value="jcel-reasoner" />
	<property name="module.4.name" value="jcel-owlapi" />
	<property name="module.5.name" value="jcel-protege" />

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Copies the compiled classes and the created jars. -->
	<target name="getjar">
		<mkdir dir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}" />
		<copy todir="${project.build.outputDirectory}">
			<fileset dir="${_root.directory}/${module.name}/${_targetclasses.directory}" />
		</copy>

		<mkdir dir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}" />
		<copy todir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}">
			<fileset dir="${_root.directory}/${module.name}/${_targetlib.directory}">
				<include name="${module.name}-${project.version}.jar" />
				<include name="${module.name}-${project.version}-sources.jar" />
			</fileset>
			<fileset dir="${_root.directory}/${module.name}">
				<include name="copying.txt" />
				<include name="copying-lesser.txt" />
				<include name="license-2.0.txt" />
			</fileset>
		</copy>
	</target>

	<!-- Compiles all modules and gets their jars. -->
	<target name="getjars">
		<antcall target="getjar">
			<param name="module.name" value="${module.0.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.1.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.2.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.3.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.4.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.5.name}" />
		</antcall>
	</target>

	<!-- Prepares the local repository. -->
	<target name="getrepository">
		<mkdir dir="${_lib.directory}" />
		<copy todir="${_lib.directory}">
			<fileset dir="${repository.directory}" />
		</copy>
	</target>

	<!-- Decompresses the external jars. -->
	<target name="unjar">
		<mkdir dir="${_targetclasses.directory}" />
		<unjar dest="${_targetclasses.directory}">
			<fileset dir="${_bundlejars.directory}" includes="${bundlejars}" />
		</unjar>
	</target>

	<!-- Creates the bundle. -->
	<target name="bundle">
		<mkdir dir="${_bundle.directory}" />
		<jar destfile="${_bundle.directory}/${_bundle.name}.jar">
			<fileset dir="${project.build.outputDirectory}" />
			<fileset dir="${_bundlejars.directory}" includes="${bundlelicenses}" />
			<manifest>
				<attribute name="Implementation-Title" value="${project.groupId}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Main-Class" value="${mainclass}" />
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="clean, getjars, getrepository, unjar, bundle" />

</project>

