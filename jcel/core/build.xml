<?xml version="1.0" encoding="UTF-8" ?>
<project name="core" default="dist" basedir=".">

	<!--
 *
 * Copyright 2009 Julian Mendez
 *
 *
 * This file is part of jcel.
 *
 * jcel is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * jcel is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with jcel.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<property name="groupId" value="jcel" />
	<property name="artifactId" value="core" />

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<!-- 

	The following version properties should be defined at this point : 
	  * version : has the version number of the form major.minor.patch 
	  * build.number : has the build number
	  * requiredjars : has a space-separated list of the jars required to compile the project and run the test cases

	Source directories: (src)
	  * src/main/javadoc : text for the javadoc
	  * src/main/java : source code of the main part
	  * src/test/java : source code of the unit tests

	Generated directories: (target)
	  * target/bin : compiled classes
	  * target/javadoc : generated javadoc
	  * target/lib : generated jar file
	  * target/report : generated reports of unit tests
	  * target/test : compiled unit test classes

	-->

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.path" value="src" />

	<property name="_src.javadoc.path" value="${src.path}/main/javadoc" />
	<property name="_src.main.path" value="${src.path}/main/java" />
	<property name="_src.test.path" value="${src.path}/test/java" />
	<property name="_src.appdata.path" value="${src.path}/data" />
	<property name="_jars.path" value="${basedir}/.." />
	<property name="_app.path" value="${project.build.directory}/app" />
	<property name="_javadoc.path" value="${project.build.directory}/javadoc" />
	<property name="_main.bin.path" value="${project.build.directory}/bin" />
	<property name="_prjlib.path" value="${project.build.directory}/lib" />
	<property name="_srclib.path" value="${project.build.directory}/src" />
	<property name="_test.bin.path" value="${project.build.directory}/test" />
	<property name="_test.report.path" value="${project.build.directory}/report" />
	<property name="_zipfile.path" value="${basedir}/../${groupId}-${artifactId}-${version}.${build.number}.zip" />
	<property name="_debuglevel" value="lines,vars,source" />

	<path id="libs.path">
		<fileset dir="${_jars.path}" includes="${requiredjars}" />
	</path>

	<patternset id="javadoc.patternset">
		<include name="${_javadoc.path}/**" />
	</patternset>

	<patternset id="testclasses.patternset">
		<include name="**/*Test.java" />
	</patternset>

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Creates a jar with the source code. -->
	<target name="src" depends="clean">
		<mkdir dir="${_srclib.path}" />
		<jar destfile="${_srclib.path}/${artifactId}-src-${version}.jar" basedir="${basedir}">
			<manifest>
				<attribute name="Implementation-Title" value="${groupId}-${artifactId}" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<!-- Compiles the whole project. -->
	<target name="build">
		<mkdir dir="${_main.bin.path}" />
		<javac srcdir="${_src.main.path}" destdir="${_main.bin.path}" classpathref="libs.path" debug="on" debuglevel="${_debuglevel}" />
		<mkdir dir="${_test.bin.path}" />
		<javac srcdir="${_src.test.path}" destdir="${_test.bin.path}" classpath="${_main.bin.path}" classpathref="libs.path" debug="on" debuglevel="${_debuglevel}" />
	</target>

	<!-- Performs the unit tests. -->
	<target name="test" depends="build">
		<mkdir dir="${_test.report.path}" />
		<junit printsummary="on" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement path="${_main.bin.path}" />
				<pathelement path="${_test.bin.path}" />
				<fileset dir="${_jars.path}" includes="${requiredjars}" />
			</classpath>
			<formatter type="plain" usefile="on" />
			<batchtest fork="yes" todir="${_test.report.path}">
				<fileset dir="${_src.test.path}">
					<patternset refid="testclasses.patternset" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- Creates the javadoc. -->
	<target name="javadoc">
		<mkdir dir="${_javadoc.path}" />
		<javadoc packagenames="*" sourcepath="${_src.javadoc.path}:${_src.main.path}" destdir="${_javadoc.path}" version="true" use="true" windowtitle="${ant.project.name}" overview="${_src.javadoc.path}/overview.html" classpathref="libs.path" access="package" />
	</target>

	<!-- Creates a jar with the binaries. -->
	<target name="jar" depends="build">
		<mkdir dir="${_prjlib.path}" />
		<jar destfile="${_prjlib.path}/${artifactId}-${version}.jar" basedir="${_main.bin.path}">
			<manifest>
				<attribute name="Implementation-Title" value="${groupId}-${artifactId}" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<!-- Creates a compressed file containing the whole project. -->
	<target name="zip">
		<delete file="${_zipfile.path}" />
		<zip destfile="${_zipfile.path}" basedir="${basedir}" />
	</target>

	<target name="dist" depends="clean, src, build, javadoc, jar">
		<!--buildnumber file="version.properties"/-->
	</target>

</project>

